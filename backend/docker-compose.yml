version: '3.8'

services:
  neo4j:
    image: neo4j:5.14-community
    container_name: movie_db_neo4j
    ports:
      - "7474:7474"  # Interface web Neo4j Browser
      - "7687:7687"  # Bolt protocol pour les connexions d'application
    environment:
      # Authentification (changez le mot de passe !)
      - NEO4J_AUTH=neo4j/motdepasse123
      
      # Configuration de base
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      
      # Configuration de performance
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_dbms_memory_pagecache_size=512m
      
      # Configuration pour le développement
      - NEO4J_dbms_logs_debug_level=INFO
      - NEO4J_dbms_security_allow__csv__import__from__file__urls=true
      
    volumes:
      # Persistance des données
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "motdepasse123", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local

# Pour démarrer Neo4j :
# docker-compose up -d
#
# Pour arrêter :
# docker-compose down
#
# Pour voir les logs :
# docker-compose logs -f neo4j
#
# Pour supprimer les données (ATTENTION - DESTRUCTIF) :
# docker-compose down -v